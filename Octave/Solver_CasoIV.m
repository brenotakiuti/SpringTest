%% Comparação de resultados da solução do ODE de um% massa mola amortecedor %% Caso IV: igual I mas usando forca peso ao inves% de usar condicao inicial.clearclcclose all%% Preprocessamento dos dados do UNITYsensorOffset = 1.9451+0.5; %sensorOffset = 2.5;%Este offset existe porque o sensor utilizado para medir o deslocamento mede a distância da massa até o solo, a partir do ponto mais baixo do bloco:% -----%|     |%|     |% -----  ---%  | |    |%  | |    | distancia medida  %__|_|____V_data = load('-ascii','data.txt');y_unity = data(:,2)-(sensorOffset);t_unity = data(:,1);n = length(t_unity);tspan = [0, t_unity(end)];%y0 = [0.5 0];y0 = [0 0];h = t_unity(2)-t_unity(1);tol = 1e-10;% Solução por RungeKutta45odestruct = odeset('AbsTol',tol, 'InitialStep', h);[t0, y0] = ode45(@odeMCK_peso, tspan, y0,odestruct);t0 = t0';y0 = y0';t = linspace(tspan(1),tspan(2),n);y(1,:) = interp1(t0,y0(1,:),t,"spline");y(2,:) = interp1(t0,y0(2,:),t,"spline");%y(1,:) = interp1(t0,y0(1,:),t_unity,"spline");%y(2,:) = interp1(t0,y0(2,:),t_unity,"spline");plot(t,y(1,:),'b')hold onplot(t_unity,y_unity, 'g')%axis ([0 20 -0.50 0.55])%% Cálculo da diferença entre sinaisR1 = 100*abs(y(1,:)-y_unity')./(y(1,:)-1);MAPE_unity = sum(R1(2:end))/(n-1)cc = xcorr(y(1,:), y_unity');correlation_coefficient = max(cc) / sqrt(sum(y(1,:).^2) * sum(y_unity'.^2));% https://pt.wikipedia.org/wiki/Coeficiente_de_correla%C3%A7%C3%A3o_de_Pearson % 2004_Derrick_TimeSeriesAnalysis.pdf##R3 = abs(ya-y(1,:))/ya;##MAPE_rk = 100*sum(R3)/n